-- Create employee table for AWS RDS PostgreSQL
CREATE TABLE IF NOT EXISTS public.employee (
    id bigserial NOT NULL,
    first_name character varying(100) NULL,
    last_name character varying(100) NULL,
    phone_number character varying(30) NULL,
    email character varying(255) NOT NULL,
    wallet_address character varying(100) NULL,
    street_address character varying(255) NULL,
    country character varying(100) NULL,
    state character varying(100) NULL,
    zip_code character varying(20) NULL,
    city character varying(100) NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    country_code text NULL,
    CONSTRAINT employee_pkey PRIMARY KEY (id),
    CONSTRAINT employee_email_key UNIQUE (email)
) TABLESPACE pg_default;

-- Create employer table for AWS RDS PostgreSQL
CREATE TABLE IF NOT EXISTS public.employer (
    id bigserial NOT NULL,
    first_name character varying(100) NULL,
    last_name character varying(100) NULL,
    phone_number character varying(30) NULL,
    email character varying(255) NOT NULL,
    wallet_address character varying(100) NULL,
    street_address character varying(255) NULL,
    country character varying(100) NULL,
    state character varying(100) NULL,
    zip_code character varying(20) NULL,
    city character varying(100) NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    country_code text NULL,
    CONSTRAINT employer_pkey PRIMARY KEY (id),
    CONSTRAINT employer_email_key UNIQUE (email)
) TABLESPACE pg_default;

-- Create jobs table for AWS RDS PostgreSQL
CREATE TABLE IF NOT EXISTS public.jobs (
    id bigint generated by default as identity NOT NULL,
    title text NOT NULL,
    company_name text NOT NULL,
    location text NULL,
    location_type text NULL,
    salary numeric(12, 2) NULL,
    currency text NULL,
    pay_frequency text NULL,
    job_type text NULL,
    notification_email text NULL,
    reference_code text NULL,
    selected_oracles text NULL,
    verification_notes text NULL,
    description text NULL,
    responsibilities text NULL,
    skills text NULL,
    associated_skills text NULL,
    additional_compensation text NULL,
    employee_benefits text NULL,
    company_description text NULL,
    status text NOT NULL DEFAULT 'draft'::text,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT jobs_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

-- Create job_applications table for AWS RDS PostgreSQL
CREATE TABLE IF NOT EXISTS public.job_applications (
    id bigserial NOT NULL,
    employee_id bigint NOT NULL,
    job_id bigint NOT NULL,
    application_status text NULL,
    applied_at timestamp with time zone NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT job_applications_pkey PRIMARY KEY (id),
    CONSTRAINT job_applications_unique_employee_job UNIQUE (employee_id, job_id),
    CONSTRAINT job_applications_employee_fkey FOREIGN KEY (employee_id) REFERENCES public.employee(id) ON DELETE CASCADE,
    CONSTRAINT job_applications_job_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id) ON DELETE CASCADE
) TABLESPACE pg_default;

-- Create saved_jobs table for AWS RDS PostgreSQL
CREATE TABLE IF NOT EXISTS public.saved_jobs (
    id bigserial NOT NULL,
    employee_id bigint NOT NULL,
    job_id bigint NOT NULL,
    saved_at timestamp with time zone NOT NULL DEFAULT now(),
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT saved_jobs_pkey PRIMARY KEY (id),
    CONSTRAINT saved_jobs_unique_employee_job UNIQUE (employee_id, job_id),
    CONSTRAINT saved_jobs_employee_fkey FOREIGN KEY (employee_id) REFERENCES public.employee(id) ON DELETE CASCADE,
    CONSTRAINT saved_jobs_job_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id) ON DELETE CASCADE
) TABLESPACE pg_default;

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_employee_email ON public.employee (email);
CREATE INDEX IF NOT EXISTS idx_employee_wallet_address ON public.employee (wallet_address);
CREATE INDEX IF NOT EXISTS idx_employee_created_at ON public.employee (created_at);

CREATE INDEX IF NOT EXISTS idx_employer_email ON public.employer (email);
CREATE INDEX IF NOT EXISTS idx_employer_wallet_address ON public.employer (wallet_address);
CREATE INDEX IF NOT EXISTS idx_employer_created_at ON public.employer (created_at);

CREATE INDEX IF NOT EXISTS idx_jobs_status ON public.jobs (status);
CREATE INDEX IF NOT EXISTS idx_jobs_location_type ON public.jobs (location_type);
CREATE INDEX IF NOT EXISTS idx_jobs_job_type ON public.jobs (job_type);
CREATE INDEX IF NOT EXISTS idx_jobs_company_name ON public.jobs (company_name);
CREATE INDEX IF NOT EXISTS idx_jobs_created_at ON public.jobs (created_at);

CREATE INDEX IF NOT EXISTS idx_job_applications_employee_id ON public.job_applications (employee_id);
CREATE INDEX IF NOT EXISTS idx_job_applications_job_id ON public.job_applications (job_id);
CREATE INDEX IF NOT EXISTS idx_job_applications_application_status ON public.job_applications (application_status);
CREATE INDEX IF NOT EXISTS idx_job_applications_created_at ON public.job_applications (created_at);

CREATE INDEX IF NOT EXISTS idx_saved_jobs_employee_id ON public.saved_jobs (employee_id);
CREATE INDEX IF NOT EXISTS idx_saved_jobs_job_id ON public.saved_jobs (job_id);
CREATE INDEX IF NOT EXISTS idx_saved_jobs_saved_at ON public.saved_jobs (saved_at);

-- Add comments for documentation
COMMENT ON TABLE public.employee IS 'Employee profiles managed through Dynamic.xyz authentication';
COMMENT ON TABLE public.employer IS 'Employer profiles managed through Dynamic.xyz authentication';
COMMENT ON TABLE public.jobs IS 'Job postings in the marketplace';
COMMENT ON TABLE public.job_applications IS 'Job applications for employees';
COMMENT ON TABLE public.saved_jobs IS 'Saved jobs bookmarked by employees';

COMMENT ON COLUMN public.employee.id IS 'Primary key - auto-incrementing bigint';
COMMENT ON COLUMN public.employee.email IS 'Email address from Dynamic.xyz - must be unique';
COMMENT ON COLUMN public.employee.wallet_address IS 'Blockchain wallet address from Dynamic.xyz';

COMMENT ON COLUMN public.employer.id IS 'Primary key - auto-incrementing bigint';
COMMENT ON COLUMN public.employer.email IS 'Email address from Dynamic.xyz - must be unique';
COMMENT ON COLUMN public.employer.wallet_address IS 'Blockchain wallet address from Dynamic.xyz';

COMMENT ON COLUMN public.jobs.id IS 'Primary key - auto-incrementing bigint';
COMMENT ON COLUMN public.jobs.status IS 'Job status: draft, active, paused, closed, filled';
COMMENT ON COLUMN public.jobs.salary IS 'Salary amount with 2 decimal places';

COMMENT ON COLUMN public.job_applications.id IS 'Primary key - auto-incrementing bigint';
COMMENT ON COLUMN public.job_applications.application_status IS 'Application status: null (not applied), applied, accepted, rejected';
COMMENT ON COLUMN public.job_applications.applied_at IS 'Timestamp when the employee applied to the job';

COMMENT ON COLUMN public.saved_jobs.id IS 'Primary key - auto-incrementing bigint';
COMMENT ON COLUMN public.saved_jobs.employee_id IS 'Reference to employee who saved the job';
COMMENT ON COLUMN public.saved_jobs.job_id IS 'Reference to the saved job';
COMMENT ON COLUMN public.saved_jobs.saved_at IS 'Timestamp when the job was saved';
