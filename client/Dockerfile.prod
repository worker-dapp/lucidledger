# Multi-stage build for production
FROM node:20.18-alpine AS builder

# Set working directory
WORKDIR /app

# Suppress npm update notices
RUN npm config set update-notifier false

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies needed for build)
# Use npm install instead of npm ci to handle lock file drift gracefully
RUN npm install --no-audit --no-fund

# Copy source code
COPY . .

# Accept build arguments
ARG VITE_API_BASE_URL
ARG VITE_DYNAMIC_ENV_ID

# Set environment variables for build
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL
ENV VITE_DYNAMIC_ENV_ID=$VITE_DYNAMIC_ENV_ID

# Increase Node.js heap size for build (use up to 1.5GB)
ENV NODE_OPTIONS="--max-old-space-size=1536"

# Build the application
RUN npm run build

# Production stage with Nginx
FROM nginx:alpine

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx configuration for SPA routing
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
